@import '../../themes/src/default.css';

:root {
    /* border */
    --tag-border-width: 1px;
    --tag-border-style: solid;
    --tag-border-color: var(--color-dark-indigo-30);
    --tag-border-color-hover: var(--color-dark-indigo);
    --tag-border-color-active: var(--color-dark-indigo);
    --tag-border-color-disabled: var(--color-dark-indigo-30-flat);

    /* background-color */
    --tag-background-color: transparent;
    --tag-background-color-active: var(--color-dark-indigo-07);
    --tag-background-color-checked: var(--color-dark-indigo);
    --tag-background-color-checked-disabled: var(--color-dark-indigo-30-flat);

    /* text color */
    --tag-text-color: var(--color-dark-indigo);
    --tag-text-color-checked: var(--color-white);
    --tag-text-color-checked-disabled: var(--color-white);
}

.component {
    display: inline-flex;
    justify-content: center;
    align-content: center;
    align-items: center;
    margin: 0;
    font-family: var(--font-family);
    text-decoration: none;
    border: var(--tag-border-width) var(--tag-border-style) var(--tag-border-color);
    border-radius: var(--tag-border-radius);
    background-color: var(--tag-background-color);
    transition: background 0.2s ease, border 0.2s ease, color 0.2s ease;
    box-sizing: border-box;
    box-shadow: none;
    user-select: none;
    cursor: pointer;
    outline: none;
}

.addons {
    display: flex;
    flex-shrink: 0;
    align-items: center;

    &:first-child {
        margin-right: var(--gap-xs);
    }

    &:last-child {
        margin-left: var(--gap-xs);
    }

    &:only-child {
        margin: 0;
    }
}

.component {
    &:active:not(:disabled) {
        background-color: var(--tag-background-color-active);
        color: var(--tag-text-color);
    }

    &:hover:not(:disabled) {
        border: var(--tag-border-width) var(--tag-border-style) var(--tag-border-color-hover);
    }

    &:disabled {
        pointer-events: none;
    }
}

.checked {
    background-color: var(--tag-background-color-checked);
    color: var(--tag-text-color-checked);

    &:disabled {
        background-color: var(--tag-background-color-checked-disabled);
        border: var(--tag-border-width) var(--tag-border-style) var(--tag-border-color-disabled);
    }
}

.xs {
    min-height: 32px;
    padding: 4px 16px;
    border-radius: 32px;
    font-size: 14px;
    line-height: 18px;
    font-weight: normal;

    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        /* Хак для ие, в котором не работает центрирование по высоте с использованием флексов, если указан min-height
        Возможно другое решение - если в будущем у компонента появится обертка, установить ей display: flex / inline-flex */
        height: 32px;
    }
}

.s {
    min-height: 48px;
    padding: 4px 16px;
    border-radius: 48px;
    font-size: 16px;
    line-height: 20px;
    font-weight: normal;

    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        /* Хак для ие, в котором не работает центрирование по высоте с использованием флексов, если указан min-height
        Возможно другое решение - если в будущем у компонента появится обертка, установить ей display: flex / inline-flex */
        height: 48px;
    }
}

.m {
    min-height: 56px;
    padding: 4px 24px;
    border-radius: 56px;
    font-size: 16px;
    line-height: 20px;
    font-weight: 500;

    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        /* Хак для ие, в котором не работает центрирование по высоте с использованием флексов, если указан min-height
        Возможно другое решение - если в будущем у компонента появится обертка, установить ей display: flex / inline-flex */
        height: 56px;
    }
}

.l {
    min-height: 68px;
    padding: 4px 32px;
    border-radius: 68px;
    font-size: 18px;
    line-height: 22px;
    font-weight: 500;

    @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
        /* Хак для ие, в котором не работает центрирование по высоте с использованием флексов, если указан min-height
        Возможно другое решение - если в будущем у компонента появится обертка, установить ей display: flex / inline-flex */
        height: 68px;
    }
}
