// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkbox Display tests should display correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <label
        class="component"
      >
        <span
          class="box"
        >
          <input
            type="checkbox"
          />
        </span>
        <span
          class="content"
        >
          <span
            class="label"
          >
            label
          </span>
          <span
            class="hint"
          >
            hint
          </span>
        </span>
      </label>
    </div>
  </body>,
  "container": <div>
    <label
      class="component"
    >
      <span
        class="box"
      >
        <input
          type="checkbox"
        />
      </span>
      <span
        class="content"
      >
        <span
          class="label"
        >
          label
        </span>
        <span
          class="hint"
        >
          hint
        </span>
      </span>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Checkbox Display tests should display indeterminate correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <label
        class="component indeterminate"
      >
        <span
          class="box"
        >
          <input
            type="checkbox"
          />
          <svg
            class="indeterminateIcon"
            focusable="false"
            viewBox="0 0 18 18"
          >
            <path
              d="M4 8h10v2H4z"
              fill="#fff"
            />
          </svg>
        </span>
        <span
          class="content"
        >
          <span
            class="label"
          >
            label
          </span>
          <span
            class="hint"
          >
            hint
          </span>
        </span>
      </label>
    </div>
  </body>,
  "container": <div>
    <label
      class="component indeterminate"
    >
      <span
        class="box"
      >
        <input
          type="checkbox"
        />
        <svg
          class="indeterminateIcon"
          focusable="false"
          viewBox="0 0 18 18"
        >
          <path
            d="M4 8h10v2H4z"
            fill="#fff"
          />
        </svg>
      </span>
      <span
        class="content"
      >
        <span
          class="label"
        >
          label
        </span>
        <span
          class="hint"
        >
          hint
        </span>
      </span>
    </label>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
