@import '../../themes/src/default.css';

:root {
    --switch-label-color: var(--color-light-text-primary);
    --switch-hint-color: var(--color-light-text-secondary);
    --switch-bg-color: var(--color-light-graphic-tertiary);
    --switch-border-color: var(--color-light-graphic-tertiary);
    --switch-checked-bg-color: var(--color-light-graphic-negative);
    --switch-checked-border-color: var(--color-light-graphic-negative);
    --switch-disabled-bg-color: var(--color-light-graphic-neutral);
    --switch-disabled-border-color: var(--color-light-graphic-neutral);
    --switch-disabled-checked-bg-color: var(--color-red-brand-30-flat); /* TODO */
    --switch-disabled-checked-border-color: var(--color-red-brand-30-flat); /* TODO */
}

.component {
    display: inline-flex;
    align-items: flex-start;
    margin: 0;
    padding: 0;
    border: 0;
    cursor: pointer;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

.component input {
    opacity: 0;
    position: absolute;
}

.switch {
    position: relative;
    border-radius: 16px;
    width: 36px;
    height: 20px;
    flex-shrink: 0;
    background-color: var(--switch-bg-color);
    border: 2px solid var(--switch-border-color);
    transition: background-color 0.2s ease, border-color 0.2s ease;
}

.switch:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background-color: #fff;
    border: 0.5px solid color-mod(var(--color-light-border-key) alpha(5%));
    box-shadow: 0 2px 4px color-mod(var(--color-light-border-key) alpha(30%));
    box-sizing: border-box;
    transition: transform 0.2s ease;
}

.content {
    margin-left: var(--gap-m);
    flex-grow: 1;
}

.label {
    @mixin system_16-24_regular;
    display: block;
    color: var(--switch-label-color);
}

.label:not(:only-child) {
    margin-bottom: var(--gap-2xs);
}

.hint {
    @mixin system_14-18_regular;
    display: block;
    color: var(--switch-hint-color);
}

/* Reversed state */

.component.reversed {
    flex-direction: row-reverse;
}

.reversed .content {
    margin-right: var(--gap-m);
    margin-left: 0;
}

/* Checked state */

.checked .switch {
    background-color: var(--switch-checked-bg-color);
    border-color: var(--switch-checked-border-color);
}

.checked .switch:before {
    /* ширина компонента(36px + 2*2px) - отступы(2 * 2px) - размер кружка(20px) */
    transform: translateX(16px);
}

/* Disabled state */

.disabled {
    cursor: initial;
}

.disabled .switch {
    background-color: var(--switch-disabled-bg-color);
    border-color: var(--switch-disabled-border-color);
}

.disabled .switch:before {
    box-shadow: none;
}

.disabled.checked .switch {
    background-color: var(--switch-disabled-checked-bg-color);
    border-color: var(--switch-disabled-checked-border-color);
}

/* Focused state */

.focused .switch {
    @mixin focus-outline;
}
