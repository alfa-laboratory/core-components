@import '../../themes/src/default.css';

:root {
    --form-control-s-min-height: 48px;
    --form-control-m-min-height: 56px;
    --form-control-l-min-height: 72px;
    --form-control-border-radius: 4px 4px 0 0;
    --form-control-border-bottom: 1px solid var(--color-light-border-secondary-inverted);
    --form-control-bg-color: color-mod(var(--color-light-bg-primary-inverted) alpha(7%));
    --form-control-bg-backdrop-filter: unset;
    --form-control-label-color: var(--color-light-text-secondary);
    --form-control-hint-color: var(--color-light-text-secondary);

    /* paddings */
    --form-control-paddings: 0 var(--gap-s);
    --form-control-l-paddings: 0 var(--gap-m);
    --form-control-labeled-s-paddings: 23px var(--gap-s) 5px;
    --form-control-labeled-m-paddings: 28px var(--gap-s) 8px;
    --form-control-labeled-l-paddings: 38px var(--gap-m) 14px;

    /* disabled */
    --form-control-disabled-bg-color: color-mod(var(--color-light-bg-primary-inverted) alpha(15%));
    --form-control-disabled-border-bottom: 1px dashed var(--color-light-border-secondary-inverted);
    --form-control-disabled-opacity: 1;
    --form-control-disabled-color: var(--color-light-text-secondary);

    /* focus */
    --form-control-focus-border-bottom: 1px solid var(--color-light-border-key);

    /* hover */
    --form-control-hover-bg-color: color-mod(var(--color-light-bg-primary-inverted) alpha(15%));

    /* error */
    --form-control-error-color: var(--color-light-text-negative);
    --form-control-error-label-color: var(--color-light-text-secondary);
    --form-control-error-shadow: none;
    --form-control-error-border-bottom: 1px solid var(--form-control-error-color);

    /* font */
    --form-control-font-family: var(--font-family);
}

.component {
    font-family: var(--form-control-font-family);
    width: max-content;
}

.inner {
    display: flex;
    position: relative;
    min-height: 100%;
    background-color: var(--form-control-bg-color);
    backdrop-filter: var(--form-control-bg-backdrop-filter);
    border-radius: var(--form-control-border-radius);
    transition: background 0.2s ease, box-shadow 0.2s ease;
    box-sizing: border-box;
    outline: none;
}

/* Нижняя граница */
.inner:before {
    content: '';
    display: block;
    position: absolute;
    width: 100%;
    bottom: 0;
    height: 0;
    border-bottom: var(--form-control-border-bottom);
    transition: transform 0.2s ease, border 0.2s ease;
    transform-origin: bottom;
}

.inputWrapper {
    flex-grow: 1;
    position: relative;
    overflow: hidden;
}

.input {
    height: 100%;
    display: flex;
    align-items: center;
    position: relative;
}

.input > * {
    padding: var(--form-control-paddings);
    font-family: var(--form-control-font-family);
}

.label {
    @mixin system_16-20_regular;

    position: absolute;
    display: flex;
    align-items: center;
    left: var(--gap-s);
    right: 0;
    transform-origin: left top;
    transform: translateY(-50%);
    transition-duration: 200ms;
    transition-property: color, transform;
    transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);
    color: var(--form-control-label-color);
}

.labelInner {
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.addons {
    display: flex;
    flex-shrink: 0;
    align-items: center;
}

.leftAddons {
    padding-left: var(--gap-s);
}

.rightAddons {
    padding-right: var(--gap-s);
}

.sub {
    @mixin system_14-18_regular;

    display: block;
    margin-top: var(--gap-2xs);
}

.hint {
    color: var(--form-control-hint-color);
}

.block {
    width: 100%;
}

/* SIZES */

.s .inner {
    min-height: 48px;
}

.s .hasLabel .input > * {
    padding: var(--form-control-labeled-s-paddings);
}

.s .label {
    top: calc(var(--form-control-s-min-height) / 2 + 1px);
}

.m .inner {
    min-height: 56px;
}

.m .hasLabel .input > * {
    padding: var(--form-control-labeled-m-paddings);
}

.m .label {
    top: calc(var(--form-control-m-min-height) / 2);
}

.l .inner {
    min-height: 72px;
}

.l .label {
    left: var(--gap-m);
}

.l .input > * {
    padding: var(--form-control-l-paddings);
}

.l .hasLabel .input > * {
    padding: var(--form-control-labeled-l-paddings);
}

.l .leftAddons {
    padding-left: var(--gap-m);
}

.l .rightAddons {
    padding-right: var(--gap-m);
}

.l.hasLeftAddons .label {
    left: var(--gap-s);
}

.l.hasLeftAddons .input > * {
    padding-left: var(--gap-s);
}

.l.hasRightAddons .input > * {
    padding-right: var(--gap-s);
}

.l .sub {
    margin-top: var(--gap-xs);
}

.l .label {
    top: calc(var(--form-control-l-min-height) / 2 - 1px);
}

/* DISABLED STATE */

.disabled {
    opacity: var(--form-control-disabled-opacity);
    background-color: var(--form-control-disabled-bg-color);
    color: var(--form-control-disabled-color);
}

.disabled:before {
    border-bottom: var(--form-control-disabled-border-bottom);
}

/* FOCUS STATE */

.focused:not(.disabled):not(.hasError):before {
    border-bottom: var(--form-control-focus-border-bottom);
    transform: scaleY(2);
}

.filled .label {
    transform: translateY(-100%) scale(0.875);
}

/* HOVER STATE */

.inner:not(.disabled):hover {
    background-color: var(--form-control-hover-bg-color);
}

/* ERROR STATE */

.error {
    color: var(--form-control-error-color);
}

.hasError .label {
    color: var(--form-control-error-label-color);
}

.hasError {
    box-shadow: var(--form-control-error-shadow);
}

.hasError:before {
    border-bottom: var(--form-control-error-border-bottom);
    transform: scaleY(2);
}

/* min-height and width: max-content; fix for IE */

@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    .component {
        float: left;
        clear: left;
    }

    .inner:after {
        min-height: inherit;
        font-size: 0;
        content: '';
    }
}
